
classdef TfStreamGoal < ros.Message
    %TfStreamGoal MATLAB implementation of tf_lookup/TfStreamGoal
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'tf_lookup/TfStreamGoal' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'e00b5ec9adf5765d948ec802ab721a4a' % The MD5 Checksum of the message definition
        PropertyList = { 'Transforms' 'SubscriptionId' 'Update' } % List of non-constant message properties
        ROSPropertyList = { 'transforms' 'subscription_id' 'update' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.tf_lookup.Subscription' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Transforms
        SubscriptionId
        Update
    end
    methods
        function set.Transforms(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.tf_lookup.Subscription.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.tf_lookup.Subscription'};
            validateattributes(val, validClasses, validAttributes, 'TfStreamGoal', 'Transforms')
            obj.Transforms = val;
        end
        function set.SubscriptionId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'TfStreamGoal', 'SubscriptionId');
            obj.SubscriptionId = char(val);
        end
        function set.Update(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TfStreamGoal', 'Update');
            obj.Update = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.tf_lookup.TfStreamGoal.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.tf_lookup.TfStreamGoal(strObj);
        end
    end
end
